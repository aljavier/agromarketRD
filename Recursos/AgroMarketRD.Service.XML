<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AgroMarketRD.Service</name>
    </assembly>
    <members>
        <member name="T:AgroMarket.Service.AgroMarketService">
            <summary>
            Servicio web de la bolsa de productos agropecuarios de la Republica Dominicana.
            </summary>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.SignIn(System.String,System.String)">
            <summary>
            Autentificacion de compradores y productores (y auditores)
            </summary>
            <param name="userName">Nombre de usuario</param>
            <param name="password">Contraseña</param>
            <returns>Token de acceso y id del usuario si fue exitoso.</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.LogOff(System.String,System.String)">
            <summary>
            Cierra la sesón de un usuario.
            </summary>
            <param name="userName">User name</param>
            <param name="token">Token</param>
            <returns>Log off success or not</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetProducts(System.String,System.String)">
            <summary>
            Catalogo de los productos que se pueden vender y comprar en la bolsa.
            </summary>
            <param name="userName">Usuario id</param>
            <param name="token">Token de acceso</param>
            <returns>Lista de productos del mercado</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetUnitTypes(System.String,System.String)">
            <summary>
            Tipo de unidades de los productos. e.g. libras, sacos, etc.
            </summary>
            <param name="userName">Usuario id</param>
            <param name="token">Token de acceso</param>
            <returns>Los diferentes tipo de unidades de los productos del catalogo</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.CreateOffer(System.String,System.String,System.Int32,System.Int32,System.Decimal,System.String)">
            <summary>
            Crea una oferta, solo util para productores.
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="cantidad">Cantidad</param>
            <param name="codigoProducto">codigo producto</param>
            <param name="precioUnidad">precio unidad</param>
            <param name="tipoUnidad">tipo unidad</param>
            <returns>Id de la oferta creada y error de exitoso o fallid</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.RemoveOffer(System.String,System.String,System.Int32)">
            <summary>
            Borra una oferta, solo puede hacerse si es el propietario de la oferta.
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="offerId">oferta id</param>
            <returns></returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetOffer(System.String,System.String,System.Int32)">
            <summary>
            Obtiene una oferta por el id
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="offerId">offer id</param>
            <returns>Oferta solicitada si existe</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetAllOffers(System.String,System.String)">
            <summary>
            Obtiene todas las ofertas de un productor
            </summary>
            <param name="userName">user name</param>
            <param name="token">token</param>
            <returns>Todas las ofertas del productor</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.CreateIntentionToBuy(AgroMarketRD.Service.Requests.IntentionToBuyFromProducts)">
            <summary>
            Crea una intencion de compra desde productos.
            </summary>
            <returns>Id del request creado</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.CreateIntentionToBuyFromOffers(AgroMarketRD.Service.Requests.IntentionToBuyFromOffers)">
            <summary>
            Crea una intencion de compra a partir de una o mas ofertas del mercado
            </summary>
            <param name="request">request</param>
            <returns>Id d ela intencion creada</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.RemoveIntentionToBuy(System.String,System.String,System.Int32)">
            <summary>
            Borra una solicitud creada, solo puede hacerlo quien la creó.
            </summary>
            <param name="userId">user id</param>
            <param name="token">token</param>
            <param name="requestId">rquest id</param>
            <returns>Error de exitosos o fallido</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetIntentionToBuy(System.String,System.String,System.Int32)">
            <summary>
            Obtiene una solicitud de un producto por el id.
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="intentionId">request id</param>
            <returns>Solicitud del id si existe</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetAllIntentionsToBuy(System.String,System.String)">
            <summary>
            Obtiene todas las solicitudes hechas en el mercado que aun esten activas
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <returns>Lista de solicitudes disponibles</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.CreateIntentionToSell(AgroMarketRD.Service.Requests.IntentionToSellRequest)">
            <summary>
            Create una intencion de venta
            </summary>
            <param name="request">request ( ver las propiedades del objeto)</param>
            <returns>Id de la intencion creada</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.RemoveIntentionToSell(System.String,System.String,System.Int32)">
            <summary>
            Cancela una intencion de venta
            </summary>
            <param name="userName">User name</param>
            <param name="token">Token</param>
            <param name="intentionId">Intention Id</param>
            <returns>Success or not</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetIntentionToSell(System.String,System.String,System.Int32)">
            <summary>
            Obtiene los detalles de una intencion.
            </summary>
            <param name="userName">User name</param>
            <param name="token">token</param>
            <param name="intentionId">intention id</param>
            <returns>Intention del id si existe</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetIntentionsToSell(System.String,System.String)">
            <summary>
            Obtiene todas las intenciones ventas activas.
            </summary>
            <param name="userName">User name</param>
            <param name="token">Token</param>
            <returns>Intentions to sell</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.MakeDeal(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Sella un trato de venta y compra. Tanto vendedor como comprador deben sellar
            </summary>
            <param name="userName">user name</param>
            <param name="token">token</param>
            <param name="intentionSellId">itencion compra id</param>
            <param name="intentionBuyId">intecion venta id</param>
            <returns>Repuesta exitoso o no</returns>
        </member>
        <member name="M:AgroMarket.Service.AgroMarketService.GetAllSells(System.String,System.String)">
            <summary>
            Obtiene todas las ventas culminadas en el mercado. /!\ PARA USO DE AUDITORIA MAYORMENTE! /!\
            </summary>
            <param name="userName">user name</param>
            <param name="token">token</param>
            <returns>Todas las ventas</returns>
        </member>
        <member name="T:AgroMarket.Service.IAgroMarketService">
            <summary>
            Interfaz WCF Service AgroMarketRD
            </summary>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.SignIn(System.String,System.String)">
            <summary>
            Sign in
            </summary>
            <param name="userName">user name</param>
            <param name="password">password</param>
            <returns>Login response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.LogOff(System.String,System.String)">
            <summary>
            Log ogg
            </summary>
            <param name="userName">User name</param>
            <param name="token">Token</param>
            <returns>Log off success or not</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetProducts(System.String,System.String)">
            <summary>
            Get products
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <returns>Products response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetUnitTypes(System.String,System.String)">
            <summary>
            Get unit types
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <returns>Unit types response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.CreateOffer(System.String,System.String,System.Int32,System.Int32,System.Decimal,System.String)">
            <summary>
            Create offer
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="cantidad">Cantidad</param>
            <param name="codigoProducto">codigo producto</param>
            <param name="precioUnidad">precio unidad</param>
            <param name="tipoUnidad">tipo unidad</param>
            <returns>Create offer response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.RemoveOffer(System.String,System.String,System.Int32)">
            <summary>
            Remove an offer
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="offerId">offer id</param>
            <returns>Remove an offer</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetOffer(System.String,System.String,System.Int32)">
            <summary>
            Get offer productor
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="offerId">offer id</param>
            <returns>An offer of the productor</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetAllOffers(System.String,System.String)">
            <summary>
            Get all offers on the market
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <returns>Offers from productor</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.CreateIntentionToBuy(AgroMarketRD.Service.Requests.IntentionToBuyFromProducts)">
            <summary>
            Create a request of a product
            </summary>
            <param name="request">request</param>
            <returns>Create request response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.CreateIntentionToBuyFromOffers(AgroMarketRD.Service.Requests.IntentionToBuyFromOffers)">
            <summary>
            Create a request of a product
            </summary>
            <param name="request">request</param>
            <returns>Create request response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.RemoveIntentionToBuy(System.String,System.String,System.Int32)">
            <summary>
            Remove a request
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="intentionId">request id</param>
            <returns>Remove request response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetIntentionToBuy(System.String,System.String,System.Int32)">
            <summary>
            Get a request
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="intentionId">request id</param>
            <returns>Request response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetAllIntentionsToBuy(System.String,System.String)">
            <summary>
            Get all requests
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <returns>All requests in the market</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.CreateIntentionToSell(AgroMarketRD.Service.Requests.IntentionToSellRequest)">
            <summary>
            Create intention to sell
            </summary>
            <param name="request">Request</param>
            <returns>Response with id of request created</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.RemoveIntentionToSell(System.String,System.String,System.Int32)">
            <summary>
            Cancel an intention to sell
            </summary>
            <param name="userName">User name</param>
            <param name="token">Token</param>
            <param name="intentionId">Intention Id</param>
            <returns>Success or not</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetIntentionToSell(System.String,System.String,System.Int32)">
            <summary>
            Get an intention to sell
            </summary>
            <param name="userName">User name</param>
            <param name="token">Token</param>
            <param name="intentionId">intention id</param>
            <returns>Intention with the id sended</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetIntentionsToSell(System.String,System.String)">
            <summary>
            Get intentions to sell
            </summary>
            <param name="userName">User name</param>
            <param name="token">Token</param>
            <returns>Intentions to sell</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.MakeDeal(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Make a intention to buy/sell
            </summary>
            <param name="userName">user id</param>
            <param name="token">token</param>
            <param name="intentionSellId">offer id</param>
            <param name="intentionBuyId">request id</param>
            <returns>Intention buying response</returns>
        </member>
        <member name="M:AgroMarket.Service.IAgroMarketService.GetAllSells(System.String,System.String)">
            <summary>
            Get all finalized sells.
            </summary>
            <param name="userName">user name</param>
            <param name="token">token</param>
            <returns>All sells in the market</returns>
        </member>
        <member name="T:AgroMarketRD.Service.Helpers.AccessHelper">
            <summary>
            Helper relacionado al acceso al servicio web y el logging de estos.
            </summary>
        </member>
        <member name="M:AgroMarketRD.Service.Helpers.AccessHelper.Add(System.String,System.ServiceModel.OperationContext)">
            <summary>
            Envia a la db un acceso.
            </summary>
            <param name="userName">User ID</param>
            <param name="context">Context</param>
        </member>
        <member name="M:AgroMarketRD.Service.Helpers.AccessHelper.IsSessionValid(System.String,System.String)">
            <summary>
            Valida la session de un usuario.
            </summary>
            <param name="userName">User Name</param>
            <param name="token">Token</param>
            <returns>True si es válida, false en caso contrario</returns>
        </member>
    </members>
</doc>
